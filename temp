import pandas as pd
from datetime import datetime, timedelta

# Assuming your data frame is named df
df['createdon'] = pd.to_datetime(df['createdon'], format='%d/%m/%Y')
df = df.sort_values(['client_id', 'createdon'])

# Get the current date
current_date = datetime.now()

# Define a function to calculate rolling counts for specified intervals
def calculate_rolling_counts(group):
    group['Buy_12m'] = group['createdon'].sub(current_date).lt(pd.DateOffset(days=365)).sum()
    group['Buy_9m'] = group['createdon'].sub(current_date).lt(pd.DateOffset(days=274)).sum()
    group['Buy_6m'] = group['createdon'].sub(current_date).lt(pd.DateOffset(days=183)).sum()
    group['Buy_3m'] = group['createdon'].sub(current_date).lt(pd.DateOffset(days=91)).sum()
    
    group['Sell_12m'] = group['createdon'].sub(current_date).lt(pd.DateOffset(days=365)).sum()
    group['Sell_9m'] = group['createdon'].sub(current_date).lt(pd.DateOffset(days=274)).sum()
    group['Sell_6m'] = group['createdon'].sub(current_date).lt(pd.DateOffset(days=183)).sum()
    group['Sell_3m'] = group['createdon'].sub(current_date).lt(pd.DateOffset(days=91)).sum()
    
    return group

# Apply the function to each group of client_id
df = df.groupby('client_id').apply(calculate_rolling_counts)

# Reset the index
df = df.reset_index(drop=True)

# Display the resulting DataFrame
print(df)
